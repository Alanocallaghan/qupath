# This workflow will build a Java project with Gradle, then create an image with jpackage
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

 name: Build packages with jpackage

 on: push

 jobs:
   build:

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            name: Linux
          - platform: macos-12 # x64
            name: Mac-x64
          - platform: macos-14 # aarch64
            name: Mac-arm64
          - platform: windows-latest
            name: Windows
    container: ${{ matrix.container }}
    runs-on: ${{ matrix.platform }}
    steps:

    - uses: actions/checkout@v4

    - name: Get qupath version from gradle
      shell: bash
      run: |
        # grep reads the version line, sed strips everything before =
        # GITHUB_ENV means it's stored in ${{env.QUPATH_VERSION}} persistently
        # not just for the current step...
        echo "QUPATH_VERSION=$(grep 'qupathVersion = \".*\"' settings.gradle  | sed -e 's/.*= \"\(.*\)\"/\1/')" >> $GITHUB_ENV

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v2

    - name: Build with Gradle (Win/Mac/Linux deb)
      if: matrix.container == ''
      uses: gradle/gradle-build-action@v3
      with:
        arguments: jpackage -P git-commit=true -P package=installer mergedJavadoc createChecksums -P toolchain=21

    - name: Make Linux tar.xz
      if: matrix.name == 'Linux'
      shell: bash
      run: |
        tar -c build/dist/QuPath/ | xz > build/dist/QuPath-v${{ env.QUPATH_VERSION }}-${{ matrix.name }}.tar.xz
        rm -r build/dist/QuPath/

    - name: Clean windows artifact
      if: matrix.name == 'Windows'
      shell: bash
      run: |
        rm -r build/dist/QuPath-${{ env.QUPATH_VERSION }}

    - uses: actions/upload-artifact@v4
      with:
        name: QuPath-v${{ env.QUPATH_VERSION }}-${{ matrix.name }}
        path: build/dist/QuPath*
        retention-days: 1

    - uses: actions/upload-artifact@v4
      if: matrix.name == 'Mac-arm64'
      with:
        name: javadoc-QuPath-v${{ env.QUPATH_VERSION }}
        path: build/docs-merged/javadoc
        retention-days: 7

   release:
     needs: build
     permissions:
       contents: write
     runs-on: ubuntu-latest
     steps:

       - uses: actions/checkout@v4

       - name: Get qupath version from gradle
         shell: bash
         run: |
           echo "QUPATH_VERSION=$(grep 'qupathVersion = \".*\"' settings.gradle  | sed -e 's/.*= "\(.*\)"/\1/')" >> $GITHUB_ENV

       - uses: actions/download-artifact@v4
         with:
           merge-multiple: true
           pattern: QuPath*

       - name: Debug
         shell: bash
         run: ls -lah

       - name: Wrangle files
         shell: bash
         run: |
           mv QuPath-${{ env.QUPATH_VERSION }}.msi QuPath-v${{ env.QUPATH_VERSION }}-Windows.msi
           mv QuPath-${{ env.QUPATH_VERSION }}.zip QuPath-v${{ env.QUPATH_VERSION }}-Windows.zip
           mv QuPath-${{ env.QUPATH_VERSION }}-x64.pkg QuPath-v${{ env.QUPATH_VERSION }}-Mac-x64.pkg
           mv QuPath-${{ env.QUPATH_VERSION }}-arm64.pkg QuPath-v${{ env.QUPATH_VERSION }}-Mac-arm64.pkg

       - name: Release
         env:
           GH_TOKEN: ${{ github.token }}
         run: |
           gh release create --draft v${{ env.QUPATH_VERSION }} --title v${{ env.QUPATH_VERSION }} \
               QuPath-v${{ env.QUPATH_VERSION }}-Windows.msi \
               QuPath-v${{ env.QUPATH_VERSION }}-Windows.zip \
               QuPath-v${{ env.QUPATH_VERSION }}-Mac-x64.pkg \
               QuPath-v${{ env.QUPATH_VERSION }}-Mac-arm64.pkg \
               QuPath-v${{ env.QUPATH_VERSION }}-Linux.tar.xz
