# Support for context help

ContextHelp.title = Context help
ContextHelp.defaultHelpText = Move the cursor over something to view any available help text
ContextHelp.warning.selectionMode = Selection mode is active - this will switch drawing tools to become selection tools instead
ContextHelp.warning.annotationsHidden = Annotations are hidden
ContextHelp.warning.detectionsHidden = Detections are hidden
ContextHelp.warning.tmaCoresHidden = The TMA grid is hidden
ContextHelp.warning.pixelOverlayHidden = Pixel classification overlay is hidden
ContextHelp.warning.opacityZero = Opacity slider is zero (unselected objects won't be visible)
ContextHelp.warning.noImage = No image is open in the current viewer
ContextHelp.warning.noProject = No project is open (QuPath works best using projects)

# Startup/Welcome message

Welcome.title = Welcome
Welcome.develop = Develop
Welcome.developMessage = Check out QuPath's source code on GitHub -\nor see what's new in the ChangeLog
Welcome.discuss = Discuss
Welcome.discussMessage = Join other QuPath users & search thousands of discussions\non the Scientific Community Image Forum
Welcome.docs = Docs
Welcome.docsMessage = Find QuPath step-by-step guides, video tutorials\n& more on ReadTheDocs
Welcome.welcomeMessage = Welcome to QuPath\!
Welcome.chooseTheme = Choose theme
Welcome.checkUpdates = Check for updates
Welcome.showOnStartup = Show this on startup
Welcome.cite = Don't forget to cite the latest QuPath paper when you use the software!
Welcome.clickForDetails = Click here for details
Welcome.getStarted = Get started!
Welcome.defaultMessage = Find out more about QuPath, customize key options,\nor click 'Get started!' to close this message
Welcome.macOsAarch64 = QuPath for Apple silicon is experimental!\n{{Click here}} for info about installing OpenSlide, or try the Intel build instead

# Main analysis pane

AnalysisPane.projectTab = Project
AnalysisPane.imageTab = Image
AnalysisPane.annotationsTab = Annotations
AnalysisPane.hierarchyTab = Hierarchy
AnalysisPane.historyTab = Command history
AnalysisPane.workflowTab = Workflow
AnalysisPane.switchText = Switch to %s pane.\nYou can also right-click a tab to undock it into its own window.Then close the window to make it a tab again.
AnalysisPane.measurementsTab = Measurements
AnalysisPane.descriptionTab = Description

# Extra controls

CircularSlider.inputTitle = Set rotation
CircularSlider.inputPrompt = Rotation (degrees)

# Dialogs

Dialogs.noImage = No image is available!
Dialogs.noProject = No project is available!

# General
General.objects.annotations = Annotations
General.objects.detections = Detections
General.objects.cells = Cells
General.objects.tiles = Tiles
General.objects.tmaCores = TMA cores
General.add = Add
General.remove = Remove
General.deleteObject = Delete object
General.deleteObjects = Delete objects

# Drawing tools

Tools.move = Move
Tools.move.description = Move tool, both for moving around the viewer (panning) and moving objects (translating)
Tools.rectangle = Rectangle
Tools.rectangle.description = Click and drag to draw a rectangle annotation.\nHold down 'Shift' to constrain shape to be a square.
Tools.ellipse = Ellipse
Tools.ellipse.description = Click and drag to draw an ellipse annotation.\nHold down 'Shift' to constrain shape to be a circle.
Tools.line = Line
Tools.line.description = Click and drag to draw a line annotation.\nRight-click the toolbar button to optionally switch to use arrowheads.
Tools.arrowStart = Arrow (start)
Tools.arrowEnd = Arrow (end)
Tools.arrowDouble = Arrow (double)
Tools.polygon = Polygon
Tools.polygon.description = Create a closed polygon annotation.\nYou can either click individual points (with double-click to end) or click and drag (and release the mouse button to end).
Tools.polyline = Polyline
Tools.polyline.description = Create a polyline (i.e. open polygon) annotation.\nYou can either click individual points (with double-click to end) or click and drag (and release the mouse button to end).
Tools.brush = Brush
Tools.brush.description = Click and drag to paint with a brush.\nBy default, the size of the region being drawn depends upon the zoom level in the viewer.
Tools.points = Points
Tools.points.description = Click to add points to an annotation

Tools.selectionMode = Selection mode
Tools.selectionMode.description = Turn on/off selection mode - this converts drawing tools into selection tools

# Additional toolbar items
Toolbar.overlayOpacity.description = Adjust the overlay opacity
Toolbar.magnification = Magnification
Toolbar.magnification.description = Display magnification - double-click to edit
Toolbar.setMagnification = Set magnification
Toolbar.setDownsample = Set downsample factory

Toolbar.magnificationScale.description = Display scale value - double-click to edit
Toolbar.showMeasurementsTable.description = Show measurements table

Toolbar.message.promptMagnification = Enter magnification
Toolbar.message.invalidMagnification = Invalid magnification %s.\nPlease use a value greater than 0.
Toolbar.message.promptDownsample = Enter downsample factor
Toolbar.message.invalidDownsample = Invalid downsample %s.\nPlease use a value greater than 0.


# Commands that work on viewer overlays

OverlayActions.showCountingGrid = Show grid
OverlayActions.showCountingGrid.description = Show/hide the counting grid overlay
OverlayActions.setCountingGridSpacing = Set grid spacing
OverlayActions.setCountingGridSpacing.description = Set the spacing for the counting grid
OverlayActions.showPixelOverlay = Show pixel classification
OverlayActions.showPixelOverlay.description = Show/hide the pixel overlay (used for pixel classification)
OverlayActions.showAnnotations = Show annotations
OverlayActions.showAnnotations.description = Show/hide annotation objects
OverlayActions.showAnnotationNames = Show annotation names
OverlayActions.showAnnotationNames.description = Show/hide annotation names (where available)
OverlayActions.fillAnnotations = Fill annotations
OverlayActions.fillAnnotations.description = Fill/unfill annotation object ROIs for display
OverlayActions.showDetections = Show detections
OverlayActions.showDetections.description = Show/hide detection objects
OverlayActions.fillDetections = Fill detections
OverlayActions.fillDetections.description = Fill/unfill detection object ROIs for display
OverlayActions.showTMAGrid = Show TMA grid
OverlayActions.showTMAGrid.description = Show/hide the tissue microarray grid (where available)
OverlayActions.showTMALabels = Show TMA grid labels
OverlayActions.showTMALabels.description = Show/hide the tissue microarray core labels (where available)
OverlayActions.showConnections = Show object connections
OverlayActions.showConnections.description = Show connections between objects, if available.\nThis can be used alongside some spatial commands, such as to display a Delaunay triangulation as an overlay.

OverlayActions.showCellBoundaries = Cell boundaries only
OverlayActions.showCellBoundaries.description = Display cells by drawing the cell boundary ROI only
OverlayActions.showCellNuclei = Nuclei only
OverlayActions.showCellNuclei.description = Display cells by drawing the cell nucleus ROIs only
OverlayActions.showCellBoth = Nuclei & cell boundaries
OverlayActions.showCellBoth.description = Display cells by drawing both the cell boundary and nucleus ROIs, where available
OverlayActions.showCellCentroids = Cell centroids only
OverlayActions.showCellCentroids.description = Display cells by drawing the cell centroids only.\nThe shape and color will depend upon the classification.

# Commands that work on viewers

ViewerActions.overview = Show slide overview
ViewerActions.overview.description = Show/hide the viewer overview image. This is a clickable thumbnail used for navigation.
ViewerActions.location = Show cursor location
ViewerActions.location.description = Show/hide the cursor location text
ViewerActions.scalebar = Show scalebar
ViewerActions.scalebar.description = Show/hide the viewer scalebar
ViewerActions.synchronize = Synchronize viewers
ViewerActions.synchronize.description = Synchronize panning and zooming when working with images open in multiple viewers
ViewerActions.matchResolutions = Match viewer resolutions
ViewerActions.matchResolutions.description = Adjust zoom factors to match the resolutions of images open in multiple viewers
ViewerActions.zoomToFit = Zoom to fit
ViewerActions.zoomToFit.description = Adjust zoom for all images to fit the entire image in the viewer

# Default commands for a QuPath instance
CommonActions.objectDescriptions = Show object descriptions
CommonActions.objectDescriptions.description = Show descriptions for the currently-selected object, where available.\nDescriptions can be any plain text, markdown or html added as the 'description' property to an object (currently, only annotations are supported).
CommonActions.measureTMA = Show TMA measurements
CommonActions.measureTMA.description = Show a measurement table for tissue microarray (TMA) cores
CommonActions.measureDetections = Show annotation measurements
CommonActions.measureDetections.description = Show a measurement table for annotation objects
CommonActions.measureAnnotations = Show detection measurements
CommonActions.measureAnnotations.description = Show a measurement table for detection objects
CommonActions.gridViewTMA = Show TMA core grid view
CommonActions.gridViewTMA.description = Show annotation measurements in a grid view
CommonActions.gridViewAnnotations = Show annotation grid view
CommonActions.gridViewAnnotations.description = Show tissue microarray (TMA) core measurements in a grid view
CommonActions.showAnalysisPane = Show analysis pane
CommonActions.showAnalysisPane.description = Show the analysis pane.\nThis contains the main tabs for managing projects, images and objects.
CommonActions.showHelp = Show interactive help
CommonActions.showHelp.description = Show interactive help info based on the cursor location and QuPath's current state
CommonActions.showLog = Show log
CommonActions.showLog.description = Show the log.\nThis is very helpful for identifying and debugging errors.\nIf you wish to report a problem using QuPath, please check the log for relevant information to provide.
CommonActions.showPrefPane = Preferences...
CommonActions.showPrefPane.description = Set preferences to customize QuPath's appearance and behavior
CommonActions.showBrightnessContrast = Brightness/Contrast
CommonActions.showBrightnessContrast.description = Show the brightness & contrast dialog.\nThis is also used to adjust channels and colors.\nIt makes it possible to change how the image is displayed, but does not change the image itself.
CommonActions.showCountingTool = Counting tool
CommonActions.showCountingTool.description = Show the counting pane.\nThis is used when annotating with the 'Point' tool.
CommonActions.showPointConvexHull = Show point convex hull
CommonActions.showPointConvexHull.description = Show the convex hull for point annotations.\nThis helps identify the region containing points - and find any points in unexpected places.
CommonActions.addTMANote = Add TMA note
CommonActions.addTMANote.description = Add a note to a selected tissue microarray (TMA) core.


# File menu
Menu.File = File
Menu.File.Project = Project...>
Menu.File.ExportImage = Export images...>
Menu.File.ExportSnapshot = Export snapshot...>
Menu.File.TMA = TMA data...>

Action.File.Project.createProject = Create project
Action.File.Project.createProject.description = Create a new project.\nUsually it's easier just to drag an empty folder onto QuPath to create a project, rather than navigate these menus.
Action.File.Project.openProject = Open project
Action.File.Project.openProject.description = Open an existing project.\nUsually it's easier just to drag a project folder onto QuPath to open it, rather than bother with this command.
Action.File.Project.closeProject = Close project
Action.File.Project.closeProject.description = Close the current project, including any images that are open.
Action.File.Project.addImages = Add images
Action.File.Project.addImages.description = Add images to the current project.\nYou can also add images by dragging files onto the main QuPath window.
Action.File.Project.exportImageList = Export image list
Action.File.Project.exportImageList.description = Export a list of the image paths for images in the current project.
Action.File.Project.editMetadata = Edit project metadata
Action.File.Project.editMetadata.description = Edit the metadata for the current project.\nBy adding key-value properties to images, they can be sorted and queried more easily.
Action.File.Project.checkUris = Check project URIs
Action.File.Project.checkUris.description = Check the 'Uniform Resource Identifiers' for images in the current project.\nThis basically helps fix things whenever files have moved and images can no longer be found.
Action.File.Project.importLegacy = Import images from v0.1.2
Action.File.Project.importLegacy.description = mport images from a legacy project (QuPath v0.1.2 or earlier).\nNote that it is generally a bad idea to mix versions of QuPath for analysis, but this can be helpful to recover old data and annotations.\n\nThe original images will need to be available, with the paths set correctly in the project file.

Action.File.TMA.importMap = Import TMA map
Action.File.TMA.importMap.description = Import a TMA map, e.g. a grid containing 'Case ID' values for each core
Action.File.TMA.exportData = Export TMA data
Action.File.TMA.exportData.description = Export TMA data for the current image, in a format compatible with the 'TMA data viewer'
Action.File.TMA.dataViewer = Launch TMA data viewer
Action.File.TMA.dataViewer.description = Launch the 'TMA data viewer' to visualize TMA core data that was previously exported

Action.File.ExportImage.original = Original pixels
Action.File.ExportImage.original.description = Export an image region, by extracting the pixels from the original image
Action.File.ExportImage.rendered = Rendered RGB (with overlays)
Action.File.ExportImage.rendered.description = Export an image region, as an RGB image matching how it is displayed in the viewer

Action.File.ExportSnapshot.windowScreenshot = Main window screenshot
Action.File.ExportSnapshot.windowScreenshot.description = Export the area of the screen corresponding to the main QuPath window to the clipboard.\nThis includes any additional overlapping windows and dialog boxes.
Action.File.ExportSnapshot.windowContent = Main window content
Action.File.ExportSnapshot.windowContent.description = Export the contents of the main QuPath window to the clipboard.\nThis ignores any additional overlapping windows and dialog boxes.
Action.File.ExportSnapshot.viewerContent = Current viewer content
Action.File.ExportSnapshot.viewerContent.description = Export the contents of the current viewer to the clipboard.\nNote that this creates an RGB image, which does not necessarily contain the original pixel values.

Action.File.open = Open...
Action.File.open.description = Open an image in the current viewer, using a file chooser.\nYou can also just drag the file on top of the viewer.
Action.File.openUri = Open URI...
Action.File.openUri.description = Open an image in the current viewer, by entering the path to the image.\nThis can be used to add images that are not represented by local files (e.g. hosted by OMERO), but beware that a compatible image reader needs to be available to interpret them.
Action.File.reloadData = Reload data
Action.File.reloadData.description = Reload any previously-saved data for the current image.\nThis provides a more dramatic form of 'undo' (albeit without any 'redo' option).
Action.File.save = Save
Action.File.save.description = Save a .qpdata file for this image.\nThis command is best used within projects, where QuPath will choose the location to save the file.
Action.File.saveAs = Save As
Action.File.saveAs.description = Save a .qpdata file for this image, specifying the file path.\nWarning! It is usually much better to use projects instead, and allow QuPath to decide where to store your data files.

Action.File.importObjects = Import objects from file
Action.File.importObjects.description = Import objects from GeoJSON or .qpdata files
Action.File.exportGeoJSON = Export objects as GeoJSON
Action.File.exportGeoJSON.description = Export objects in GeoJSON format to file

Action.File.quit = Quit
Action.File.quit.description = Quit QuPath



# Edit menu
Menu.Edit = Edit
Menu.Edit.Copy = Copy to clipboard...>

Action.Edit.undo = Undo
Action.Edit.undo.description = Undo the last action for the current viewer.\nNote QuPath's undo is limited, and turns itself off (for performance reasons) when many objects are present.\nThe limit can be adjusted in the preferences.
Action.Edit.redo = Redo
Action.Edit.redo.description = Redo the last action for the current viewer.

Action.Edit.Copy.selectedObjects = Selected objects
Action.Edit.Copy.selectedObjects.description = Copy the selected objects to the system clipboard as GeoJSON
Action.Edit.Copy.annotationObjects = Annotation objects
Action.Edit.Copy.annotationObjects.description = Copy all annotation objects to the system clipboard as GeoJSON
Action.Edit.Copy.currentViewer = Current viewer
Action.Edit.Copy.currentViewer.description = Copy the contents of the current viewer to the clipboard.\nNote that this creates an RGB image, which does not necessarily contain the original pixel values.
Action.Edit.Copy.mainWindowContent = Main window content
Action.Edit.Copy.mainWindowContent.description = Copy the contents of the main QuPath window to the clipboard.\nThis ignores any additional overlapping windows and dialog boxes.
Action.Edit.Copy.mainWindowScreenshot = Main window screenshot
Action.Edit.Copy.mainWindowScreenshot.description = Copy the area of the screen corresponding to the main QuPath window to the clipboard.\nThis includes any additional overlapping windows and dialog boxes.
Action.Edit.Copy.fullScreenshot = Full screenshot
Action.Edit.Copy.fullScreenshot.description = Make a screenshot and copy it to the clipboard.

Action.Edit.paste = Paste
Action.Edit.paste.description = Paste the contents of the system clipboard, if possible.\nIf the clipboard contents are GeoJSON objects, the objects will be pasted to the current image.\nOtherwise, any text found will be shown in a the script editor.
Action.Edit.pasteToCurrentPlane = Paste objects to current plane
Action.Edit.pasteToCurrentPlane.description = Paste GeoJSON objects from the system clipboard to the current z-slice and timepoint, if possible.\nNew object IDs will be generated if needed to avoid duplicates.
Action.Edit.resetPreferences = Reset preferences
Action.Edit.resetPreference.description = Reset preferences to their default values.\nThis can be useful if you are experiencing any newly-developed persistent problems with QuPath.

# Menu tools
Menu.Tools = Tools

# Classify menu
Menu.Classify = Classify
Menu.Classify.ObjectClassification = Object classification>
Menu.Classify.PixelClassification = Pixel classification>
Menu.Classify.TrainingImages = Training images>

Action.Classify.Objects.resetDetectionClassifications = Reset detection classifications
Action.Classify.Objects.resetDetectionClassifications.description = Reset the classifications of all detections

# Analyze menu
Menu.Analyze = Analyze
Menu.Analyze.Preprocessing = Preprocessing>
Menu.Analyze.Tiles = Tiles & superpixels>
Menu.Analyze.CellDetection = Cell detection>
Menu.Analyze.Features = Calculate features>
Menu.Analyze.Spatial = Spatial analysis>
Menu.Analyze.DensityMaps = Density maps>

Action.Analyze.Preprocessing.estimateStainVectors = Estimate stain vectors
Action.Analyze.Preprocessing.estimateStainVectors.description = Estimate stain vectors for color deconvolution in brightfield images.\nThis can be used when there are precisely 2 stains (e.g. hematoxylin and eosin, hematoxylin and DAB) to improve stain separation.

Action.Analyze.Tiles.createTiles = Create tiles
Action.Analyze.Tiles.createTiles.description = Create tiles. These can be useful as part of a larger workflow, for example by adding intensity measurements to the tiles, training a classifier and then merging classified tiles to identify larger regions.

Action.Analyze.Features.smoothedFeatures = Calculate features>Add smoothed features
Action.Analyze.Features.smoothedFeatures.description = Supplement the measurements for detection objects by calculating a weighted sum of the corresponding measurements from neighboring objects
Action.Analyze.Features.intensityFeatures = Calculate features>Add intensity features
Action.Analyze.Features.intensityFeatures.description = Add new intensity-based features to objects
Action.Analyze.Features.shapeFeatures = Calculate features>Add shape features
Action.Analyze.Features.shapeFeature.description = Add new shape-based features to objects

Action.Analyze.Spatial.distanceToAnnotations2D = Distance to annotations 2D
Action.Analyze.Spatial.distanceToAnnotations2D.description = Calculate distances between detection centroids and the closest annotation for each classification, using zero if the centroid is inside the annotation.\nFor example, this may be used to identify the distance of every cell from 'bigger' region that has been annotated (e.g. an area of tumor, a blood vessel).
Action.Analyze.Spatial.signedDistanceToAnnotations2D = Signed distance to annotations 2D
Action.Analyze.Spatial.signedDistanceToAnnotations2D.description = Calculate distances between detection centroids and the closest annotation for each classification, using the negative distance to the boundary if the centroid is inside the annotation.\nFor example, this may be used to identify the distance of every cell from 'bigger' region that has been annotated (e.g. an area of tumor, a blood vessel).
Action.Analyze.Spatial.detectionCentroidDistances2D = Detection centroid distances 2D
Action.Analyze.Spatial.detectionCentroidDistances2D.description = Calculate distances between detection centroids for each classification.\nFor example, this may be used to identify the closest cell of a specified type.


# View menu
Menu.View = View
Menu.View.Multiview = Multi-view...>
Menu.View.Zoom = Zoom...>
Menu.View.CellDisplay = Cell display>
Menu.View.Multitouch = Multi-touch gestures>

Action.View.commandList = Show command list
Action.View.commandList.description = Show the command list (much easier than navigating menus...)
Action.View.recentCommands = Show recent commands
Action.View.recentCommands.description = Show a list containing recently-used commands
Action.View.Multiview.addRow = Add row
Action.View.Multiview.addRow.description = Add a new row of viewers to the multi-view grid.\nThis makes it possible to view two or more images side-by-side (vertically).
Action.View.Multiview.addColumn = Add column
Action.View.Multiview.addColumn.description = Add a new column of viewers to the multi-view grid.\nThis makes it possible to view two or more images side-by-side (horizontally).
Action.View.Multiview.removeRow = Remove row
Action.View.Multiview.removeRow.description = Remove the row containing the current viewer from the multi-view grid, if possible.\nThe last row cannot be removed.
Action.View.Multiview.removeColumn = Remove column
Action.View.Multiview.removeColumn.description = Remove the column containing the current viewer from the multi-view grid, if possible.\nThe last column cannot be removed.
Action.View.Multiview.resetGridSize = Reset grid size
Action.View.Multiview.resetGridSize.description = Reset the multi-view grid so that all viewers have the same size
Action.View.Multiview.closeViewer = Close viewer
Action.View.Multiview.closeViewer.description = Close the image in the current viewer.\nThis is needed before it's possible to remove a viewer from the multi-view grid.
Action.View.channelViewer = Show channel viewer
Action.View.channelViewer.description = Open a viewer window that shows individual channels of an image size by side.\nThis is useful when working with multiplexed/multichannel fluorescence images.\nRight-click on the viewer to adjust settings.
Action.View.miniViewer = Show mini viewer
Action.View.miniViewer.description = Open a viewer window that shows a view of the pixel under the cursor.\nThis is useful for viewing the image booth zoomed in and zoomed out at the same time.
Action.View.rotate = Rotate image
Action.View.rotate.description = Rotate the image visually (this is only for display - the coordinate system remains unchanged)
Action.View.viewTracker = Show view tracker
Action.View.viewTracker.description = Record zoom and panning movements within a viewer for later playback and analysis
Action.View.slideLabel = Show slide label
Action.View.slideLabel.description = Show the slide label associated with the image in the active viewer (if available)
Action.View.inputDisplay = Show input display
Action.View.inputDisplay.description = Show mouse clicks and keypresses on screen.\nThis is particularly useful for demos and tutorials.
Action.View.memoryMonitor = Show memory monitor
Action.View.memoryMonitor.description = Show a dialog to track memory usage within QuPath, and clear the cache if required
Action.View.Zoom.400 = 400%
Action.View.Zoom.400.description = Set the zoom factor to 400% (downsample = 0.25)
Action.View.Zoom.100 = 100%
Action.View.Zoom.100.description = Set the zoom factor to 400% (downsample = 1)
Action.View.Zoom.10 = 10%
Action.View.Zoom.10.description = Set the zoom factor to 400% (downsample = 10)
Action.View.Zoom.1 = 1%
Action.View.Zoom.1.description = Set the zoom factor to 400% (downsample = 100)
Action.View.Zoom.zoomIn = Zoom in
Action.View.Zoom.zoomIn.description = Zoom in for the current viewer
Action.View.Zoom.zoomOut = Zoom out
Action.View.Zoom.zoomOut.description = Zoom out for the current viewer
Action.View.Zoom.zoomToFit = Zoom to fit
Action.View.Zoom.zoomToFit.description = Set the current viewer's zoom to fit the image
Action.View.Multitouch.allOn = Turn on all gestures
Action.View.Multitouch.allOn.description = Turn on all multi-touch gestures for touchscreens and trackpads
Action.View.Multitouch.allOff = Turn off all gestures
Action.View.Multitouch.allOff.description = Turn off all multi-touch gestures for touchscreens and trackpads
Action.View.Multitouch.scroll = Use scroll gestures
Action.View.Multitouch.scroll.description = Toggle scroll gestures for touchscreens and trackpads
Action.View.Multitouch.zoom = Use zoom gestures
Action.View.Multitouch.zoom.description = Toggle zoom gestures for touchscreens and trackpads
Action.View.Multitouch.rotate = Use rotate gestures
Action.View.Multitouch.rotate.description = Toggle rotate gestures for touchscreens and trackpads


# Objects menu
Menu.Objects = Objects
Menu.Objects.Delete = Delete...>
Menu.Objects.Select = Select...>
Menu.Objects.Select.Detections = Select detections...>
Menu.Objects.Lock = Lock...>
Menu.Objects.Annotations = Annotations...>

Action.Objects.Delete.selected = Delete selected objects
Action.Objects.Delete.selected.description = Delete the currently selected objects
Action.Objects.Delete.all = Delete all objects
Action.Objects.Delete.all.description = Delete all objects for the current image
Action.Objects.Delete.annotations = Delete all annotations
Action.Objects.Delete.annotations.description = Delete all annotation objects for the current image
Action.Objects.Delete.detections = Delete all detections
Action.Objects.Delete.detections.description = Delete all detection objects for the current image

Action.Objects.Select.reset = Reset selection
Action.Objects.Select.reset.description = Reset the selected objects for the current image
Action.Objects.Select.tmaCores = Select TMA cores
Action.Objects.Select.tmaCores.description = Select all TMA cores for the current image
Action.Objects.Select.annotations = Select annotations
Action.Objects.Select.annotations.description = Select all annotation objects for the current image
Action.Objects.Select.detections = Select all detections
Action.Objects.Select.detections.description = Select all detection objects for the current image (this includes cells and tiles)
Action.Objects.Select.cells = Select cells
Action.Objects.Select.cells.description = Select all cell objects for the current image
Action.Objects.Select.tiles = Select tiles
Action.Objects.Select.tiles.description = Select all tile objects for the current image
Action.Objects.Select.selectByClassification = Select objects by classification
Action.Objects.Select.selectByClassification.description = Select objects based upon their classification
Action.Objects.Select.selectOnCurrentPlane = Select objects on current plane
Action.Objects.Select.selectOnCurrentPlane.description = Select all objects on the current plane visible in the viewer

Action.Objects.Lock.lockSelected = Lock selected objects
Action.Objects.Lock.lockSelected.description = Lock all currently selected objects
Action.Objects.Lock.unlockSelected = Unlock selected objects
Action.Objects.Lock.unlockSelected.description = Unlock all currently selected objects
Action.Objects.Lock.toggleSelected = Toggle selected objects lock
Action.Objects.Lock.toggleSelected.description = Toggle the 'locked' state of all currently selected objects

Action.Objects.Annotation.specify = Specify annotation
Action.Objects.Annotation.specify.description = Create a rectangle or ellipse annotation with the specified properties
Action.Objects.Annotation.fullImage = Create full image annotation
Action.Objects.Annotation.fullImage.description = Create an annotation representing the full width and height of the current image
Action.Objects.Annotation.hierarchyInsert = Insert into hierarchy
Action.Objects.Annotation.hierarchyInsert.description = Insert the selected objects in the object hierarchy.\nThis involves resolving parent/child relationships based upon regions of interest.
Action.Objects.Annotation.hierarchyResolve = Resolve hierarchy
Action.Objects.Annotation.hierarchyResolve.description = Resolve the object hierarchy by setting parent/child relationships between objects based upon regions of interest.
Action.Objects.Annotation.transform = Transform annotations
Action.Objects.Annotation.transform.description = Interactively translate and/or rotate the current selected annotation.
Action.Objects.Annotation.duplicate = Duplicate selected annotations
Action.Objects.Annotation.duplicate.description = Duplicate the selected annotations
Action.Objects.Annotation.copyToCurrentPlane = Copy annotations to current plane
Action.Objects.Annotation.copyToCurrentPlane.description = Duplicate the selected objects and paste them on the current plane (i.e. the z-slice and timepoint visible in the viewer).\nThis avoids using the system clipboard. It is intended to help transfer annotations quickly across multidimensional images.
Action.Objects.Annotation.transferLast = Transfer last annotation
Action.Objects.Annotation.transferLast.description = Transfer the last annotation to the current image.\nThis can be used to bring annotations from one viewer to another, or to recover an annotation that has just been deleted.
Action.Objects.Annotation.expand = Expand annotations
Action.Objects.Annotation.expand.description = Expand (or contract) the selected annotations, optionally removing the interior.
Action.Objects.Annotation.split = Split annotations
Action.Objects.Annotation.split.description = Split complex annotations that contain disconnected pieces into separate annotations
Action.Objects.Annotation.removeFragmentsFillHoles = Remove fragments & holes
Action.Objects.Annotation.removeFragmentsFillHoles.description = Remove small fragments of annotations that contain disconnected pieces
Action.Objects.Annotation.fillHoles = Fill holes
Action.Objects.Annotation.fillHoles.description = Fill holes occurring inside annotations
Action.Objects.Annotation.makeInverse = Make inverse
Action.Objects.Annotation.makeInverse.description = Make annotations corresponding to the 'inverse' of the selected annotation.\nThe inverse annotation contains 'everything else' outside the current annotation, constrained by its parent.
Action.Objects.Annotation.mergeSelected = Merge selected
Action.Objects.Annotation.mergeSelected.description = Merge the selected annotations to become one, single annotation.
Action.Objects.Annotation.simplify = Simplify shape
Action.Objects.Annotation.simplify.description = Simplify the shapes of the current selected annotations.\nThis removes vertices that are considered unnecessary, using a specified amplitude tolerance.

Action.Objects.refreshIds = Refresh object IDs
Action.Objects.refreshIds.description = Update all object IDs to ensure they are unique
Action.Objects.refreshDuplicateIds = Refresh duplicate object IDs
Action.Objects.refreshDuplicateIds.description = Update all duplicate object IDs to ensure they are unique



# TMA menu
Menu.TMA = TMA
Menu.TMA.add = Add...>
Menu.TMA.remove = Remove...>

Action.TMA.specifyGrid = Specify TMA grid
Action.TMA.specifyGrid.description = Create a manual TMA grid, by defining labels and the core diameter.\nThis can optionally be restricted to a rectangular annotation.
Action.TMA.addRowAbove = Add TMA row above selected
Action.TMA.addRowAbove.description = Add a row to the TMA grid before (above) the row containing the current selected object
Action.TMA.addRowBelow = Add TMA row below selected
Action.TMA.addRowBelow.description = Add a row to the TMA grid after (below) the row containing the current selected object
Action.TMA.addColumnBefore = Add TMA column before selected
Action.TMA.addColumnBefore.description = Add a column to the TMA grid before (to the left of) the column containing the current selected object
Action.TMA.addColumnAfter = Add TMA column after selected
Action.TMA.addColumnAfter.description = Add a column to the TMA grid after (to the right of) the column containing the current selected object

Action.TMA.removeRow = Remove TMA row
Action.TMA.removeRow.description = Remove the row containing the current selected object from the TMA grid
Action.TMA.removeColumn = Remove TMA column
Action.TMA.removeColumn.description = Remove the column containing the current selected object from the TMA grid

Action.TMA.relabel = Relabel TMA grid
Action.TMA.relabel.description = Relabel the cores of a TMA grid. This is often needed after adding or deleting rows or columns.
Action.TMA.resetMetadata = Reset TMA metadata
Action.TMA.resetMetadata.description = Remove all the metadata for the TMA grid in the current image
Action.TMA.deleteGrid = Delete TMA grid
Action.TMA.deleteGrid.description = Delete the entire TMA grid for the current image
Action.TMA.findHull = Find convex hull detections (TMA)
Action.TMA.findHull.description = Find all detections occurring on the convex hull of the detections within a TMA core.\nThis can be used to find cells occurring towards the edge of the core, which can then be deleted if necessary.\nOften these cells may yield less reliable measurements because of artifacts.


# Automate menu
Menu.Automate = Automate
Action.Automate.scriptEditor = Script editor
Action.Automate.scriptEditor.description = Open the script editor
Action.Automate.scriptInterpreter = Script interpreter
Action.Automate.scriptInterpreter.description = Open a script interpreter to run scripts interactively, line by line.\n(In general, the Script Editor is more useful).
Action.Automate.commandWorkflow = Show workflow command history
Action.Automate.commandWorkflow.description = Show a history of the commands applied to the current image.\nNote that this is not fully exhaustive, because not all commands can be recorded.\nHowever, the command history is useful to help automatically generate batch-processing scripts.
Action.Automate.commandScript = Create command  history script
Action.Automate.commandScript.description = Create a script based upon the actions recorded in the command history

# Measure menu
Menu.Measure = Measure
Menu.Measure.GridViews = Grid views...>

Action.Measure.maps = Show measurement maps
Action.Measure.maps.description = View detection measurements in context using interactive, color-coded maps
Action.Measure.manager = Show measurement manager
Action.Measure.manager.description = View and optionally delete detection measurements
Action.Measure.export = Export measurements
Action.Measure.export.description = Export summary measurements for multiple images within a project


# Extensions menu
Menu.Extensions = Extensions

Action.Extensions.installed = Installed extensions
Action.Extensions.installed.description = View a list of installed QuPath extensions


# Help menu
Menu.Help = Help

Action.Help.welcome = Show welcome message
Action.Help.welcome.description = Show the welcome message that appears when QuPath is first launched
Action.Help.docs = Documentation (web)
Action.Help.docs.description = Open the main QuPath documentation in a web browser
Action.Help.video = YouTube channel (web)
Action.Help.video.description = Open the QuPath YouTube channel in a web browser for demo videos & tutorials
Action.Help.updates = Check for updates (web)
Action.Help.updates.description = Check online for updates to QuPath & supported extensions
Action.Help.cite = Cite QuPath in a paper (web)
Action.Help.cite.description = Please cite the QuPath publication if you use the software!\nThis command opens a web page to show how.
Action.Help.issues = Report a bug (web)
Action.Help.issues.description = Open QuPath's issues page in a web browser to report a bug.\nPlease follow the bug report template - and use the forum instead for general questions.
Action.Help.forum = View user forum (web)
Action.Help.forum.description = Visit the user forum at image.sc.\nThis is the place to ask questions about QuPath - and to give answers to help other users.
Action.Help.source = View source code (web)
Action.Help.source.description = View QuPath's source code on GitHub
Action.Help.license = License
Action.Help.license.description = View license information for QuPath and its third-party dependencies
Action.Help.systemInfo = System info
Action.Help.systemInfo.description = View technical information about this QuPath installation

# Submenu name for deprecated commands
Menu.deprecated = Deprecated>



# Built-in extension commands (may be moved elsewhere)
Extension.ImageJ = ImageJ extension
Extension.ImageJ.description = QuPath commands that enable integration with ImageJ - https://imagej.nih.gov/ij/

Action.ImageJ.superpixelsSLIC = SLIC superpixel segmentation
Action.ImageJ.superpixelsSLIC.description = Create superpixel tiles using the SLIC method
Action.ImageJ.superpixelsDoG = DoG superpixel segmentation
Action.ImageJ.superpixelsDoG.description = Create superpixel tiles using a Difference of Gaussians method

Action.ImageJ.tilesToAnnotations = Tile classifications to annotations
Action.ImageJ.tilesToAnnotations.description = Merge tiles sharing the same classification to become annotations

Action.ImageJ.pixelCount = Positive pixel count
Action.ImageJ.pixelCount.description = Area-based quantification of positive pixels with DAB staining.\nThis command does not handle large regions well; if possible, pixel classification should usually be used instead.
Action.ImageJ.simpleTissueDetection = Simple tissue detection
Action.ImageJ.simpleTissueDetection.description = Detect large regions using a simple thresholding method.\nThis command is not very flexible and lacks any preview of the results; if possible, pixel classification should usually be used instead.

Action.ImageJ.tmaDearrayer = TMA dearrayer
Action.ImageJ.tmaDearrayer.description = Identify cores and grid arrangement of a tissue microarray

Action.ImageJ.cellDetection = Cell detection
Action.ImageJ.cellDetection.description = Default cell detection in QuPath.\nNote that this is general-purpose method, not optimized for any particular staining.\n\nIt is essential to set the image type first (e.g. brightfield or fluorescence) before running this command.
Action.ImageJ.positiveCellDetection = Positive cell detection
Action.ImageJ.positiveCellDetection.description = Equivalent to 'Cell detection', with additional parameters to set a threshold during detection to identify single-positive cells.
Action.ImageJ.cellAndMembraneDetection = "Cell + membrane detection"
Action.ImageJ.cellAndMembraneDetection.description = Cell detection that uses membrane information to constrain cell boundary expansion.\n\nThis was designed specifically for hematoxylin and DAB staining, and works only where membrane staining is either very clear or absent. It is not recommended in general.
Action.ImageJ.subcellularDetection = Subcellular detection (experimental)
Action.ImageJ.subcellularDetection.description = Identify subcellular structures (e.g. spots of all kinds) within detected cells.

Action.ImageJ.macroRunner = ImageJ macro runner
Action.ImageJ.macroRunner.description = Run ImageJ macros within QuPath
Action.ImageJ.setPluginsDirectory = Set plugins directory
Action.ImageJ.setPluginsDirectory.description = Set the plugins directory to use with QuPath's embedded version of ImageJ.\n\nThis can be set to the plugins directory of an existing ImageJ installation, to make the plugins associated with that installation available within QuPath.

Action.ImageJ.extractRegion = Send region to ImageJ
Action.ImageJ.extractRegion.description = Extract the selected image region and send it to ImageJ
Action.ImageJ.extractRegionSnapshot = Send snapshot to ImageJ
Action.ImageJ.extractRegion.description = Create a rendered (RGB) snapshot and send it to ImageJ

Action.ImageJ.importRois = Import ImageJ ROIs
Action.ImageJ.importRois.description = Import ImageJ ROIs from .roi or .zip files, converting them QuPath objects


# SVG extension
Extension.SVG = SVG export extension
Extension.SVG.description = Export snapshots and images in SVG format
Action.SVG.exportImage = Rendered SVG
Action.SVG.exportImage.description = Export the current selected region as a rendered (RGB) SVG image.\nAny annotations and ROIs will be stored as vectors, which can later be adjusted in other software.
Action.SVG.exportSnapshot = Current viewer content (SVG)
Action.SVG.exportSnapshot.description = Export an RGB snapshot of the current viewer content as an SVG image.\nAny annotations and ROIs will be stored as vectors, which can later be adjusted in other software.


# Bio-Formats extension
Extension.BioFormats = Bio-Formats extension
Extension.BioFormats.description = Installs support to read and write images using Bio-Formats reading and writing options using Bio-Formats (https://www.openmicroscopy.org/bio-formats/)
Extension.BioFormats.missing.description = Cannot find the Bio-Formats library required by this extension!
Action.BioFormats.exportOmeTif = OME TIFF
Action.BioFormats.exportOmeTif.description = Write regions as OME-TIFF images. This supports writing image pyramids.



# Processing extension
Extension.Processing = Processing & classification extension
Extension.Processing.description = Core processing & classification commands

Action.Processing.Spatial.delaunay = Delaunay cluster features 2D
Action.Processing.Spatial.delaunay.description = Apply a Delaunay triangulation to detection objects based on their centroid locations.\nThis helps identify clusters of objects neighboring one another.\n\nNote this command is likely to be replaced in a future version.

Action.Processing.CellDetection.fastCellCounts = Fast cell counts (brightfield)
Action.Processing.CellDetection.fastCellCounts.description = Fast cell counting for hematoxylin and DAB images

Action.Processing.DensityMaps.create = Create density map
Action.Processing.DensityMaps.create.description = Create a density map to identify regions containing a high density of detections (e.g. cells), optionally with specified classifications
Action.Processing.DensityMaps.load = Load density map
Action.Processing.DensityMaps.create.description = Load a density map previously generated with 'Create density map'

Action.Processing.Classify.loadPixelClassifier = Load pixel classifier
Action.Processing.Classify.loadPixelClassifier.description = Load an existing pixel classifier.\nThis can be used to apply the classifier to new images, but not to continue training.
Action.Processing.Classify.trainPixelClassifier = Train pixel classifier
Action.Processing.Classify.trainPixelClassifier.description = Train a pixel classifier.\nThis can be used to quantify areas, or to generate or classify objects.
Action.Processing.Classify.createThresholder = Create thresholder
Action.Processing.Classify.createThresholder.description = Create a simple pixel classifier that applies a fixed threshold to an image

Action.Processing.Classify.loadObjectClassifier = Load object classifier
Action.Processing.Classify.loadObjectClassifier.description = Load an existing object classifier.\nThis can be used to apply the classifier to new objects, but not to continue training.
Action.Processing.Classify.trainObjectClassifier = Train object classifier
Action.Processing.Classify.trainObjectClassifier.description = Interactively train an object classifier using machine learning.\nThis is useful whenever objects cannot be classified based on one measurement alone.
Action.Processing.Classify.createSingleMeasurementClassifier = Create single measurement classifier
Action.Processing.Classify.createSingleMeasurementClassifier.description = Create a simple object classifier that applies a threshold to a single measurement
Action.Processing.Classify.createCompositeClassifier = Create composite classifier
Action.Processing.Classify.createCompositeClassifier.description = Combine multiple classifiers together to create a single classifier by applying them sequentially
Action.Processing.Classify.setCellIntensityClassifications = Set cell intensity classifications
Action.Processing.Classify.setCellIntensityClassifications.description = Set cell intensity classifications based upon a single measurement.\nThis is useful to calculate densities/percentages of positive cells or H-scores.

Action.Processing.Classify.createRegionAnnotations = Create region annotations
Action.Processing.Classify.createRegionAnnotations.description = Create annotations of fixed-size regions.\nThis can be used to select representative regions of multiple images to train (usually pixel) classifier, in combination with 'Create training image'.
Action.Processing.Classify.createTrainingImage = Create training image
Action.Processing.Classify.createTrainingImage.description = Create an image comprised of regions extracted from multiple images in a project.\nThis can be useful for interactively training a classifier across a varied dataset.
Action.Processing.Classify.createChannelTrainingImages = Create duplicate channel training images
Action.Processing.Classify.createChannelTrainingImages.description = Duplicate an image in a project so that there is one duplicate for each channel of the image.\n\nThis can be used to train separate classifiers for different channels in multiplexed images, which are then merged to form a composite classifier.
Action.Processing.Classify.splitTrainValidationTest = Split project train/validation/test
Action.Processing.Classify.splitTrainValidationTest.description = Split images within a project into training, validation and test sets