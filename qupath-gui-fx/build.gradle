plugins {
  id 'qupath.common-conventions'
  id 'qupath.publishing-conventions'
  id 'java-library'

  alias(libs.plugins.javafx)
}

ext.moduleName = 'qupath.gui.fx'
archivesBaseName = 'qupath-gui-fx'
description = "Main QuPath user interface."

configurations {
  implementation.extendsFrom guava
}

dependencies {
  api project(':qupath-core')
  api project(':qupath-core-processing')

  implementation libs.qupath.fxtras // API for no
  api libs.controlsfx

  implementation libs.snakeyaml
  implementation libs.picocli
  
  implementation libs.jfxtras
  implementation libs.commons.text
  implementation libs.commons.math

  implementation libs.bundles.ikonli
  
  implementation libs.bundles.markdown

  implementation libs.bundles.logviewer
}

javafx {
	version = libs.versions.javafx.get()
	modules = ["javafx.base", 
	           "javafx.controls",
	           "javafx.graphics",
	           "javafx.media",
	           "javafx.fxml",
	           "javafx.web",
	           "javafx.swing"]
	configuration = 'api'
}

/**
 * Export all icons from the icon factory (useful for documentation).
 */
task exportDocs(type: JavaExec) {
    description "Export icons and command descriptions for documentation"
    group "QuPath"

    dependsOn('compileJava')
    def docsDir = rootProject.layout.getBuildDirectory().dir('qupath-docs').get().getAsFile()
    doFirst {
        println "Making docs dir in ${docsDir.getAbsolutePath()}"
        docsDir.mkdirs()
    }
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'qupath.lib.gui.tools.DocGenerator'
    args docsDir.getAbsolutePath(), "--all"
}
